import {environment} from './src/environments/environment';
import {versions, versionsStaging, versionsProduction} from './src/environments/git-version';

const childProcess = require('child_process');
const fs = require('fs');
const {writeFileSync} = require('fs');
export interface VersionModel {
  shortSHA: string;
  SHA: string;
  branch: string;
  lastCommitAuthor: string;
  lastCommitTime: string;
  lastCommitMessage: string;
  lastCommitNumber: string;
  version: string;
}

/**
 * Get Git Info and others
 */
const longSHA = childProcess.execSync('git rev-parse HEAD').toString().trim();
const shortSHA = childProcess.execSync('git rev-parse --short HEAD').toString().trim();
const branch = childProcess.execSync('git rev-parse --abbrev-ref HEAD').toString().trim();
const authorName = childProcess.execSync('git log -1 --pretty=format:\'%an\'').toString().trim();
const commitTime = childProcess.execSync('git log -1 --pretty=format:\'%cd\'').toString().trim();
const commitMsg = childProcess.execSync('git log -1 --pretty=%B').toString().trim();
const totalCommitCount = childProcess.execSync('git rev-list --count HEAD').toString().trim();
/**
 * Object
 */
const versionInfo = {
  shortSHA: shortSHA,
  SHA: longSHA,
  branch: branch,
  lastCommitAuthor: authorName,
  lastCommitTime: commitTime,
  lastCommitMessage: commitMsg,
  lastCommitNumber: totalCommitCount,
  version: process.env.npm_package_version
}
const versionInfoJson = JSON.stringify(versionInfo, null, 2);
const versionInfoTs = JSON.parse(JSON.stringify(versionInfo));
let versionInfoStaging = JSON.stringify(versionsStaging, null, 2);
let versionInfoProduction = JSON.stringify(versionsProduction, null, 2);
/**
 * Staging
 */
if(environment.staging) {
   versionInfoStaging = versionInfoJson;
}
/**
 * Production
 */
if(environment.production) {
  versionInfoProduction = versionInfoJson;
}
/**
 * Generated in Ts File
 */
const content = '// this file is automatically generated by git.version-v2.ts script\n' +
  `export const versions = ${versionInfoJson}
   export const versionsStaging = ${versionInfoStaging}
   export const versionsProduction = ${versionInfoProduction}
  `
fs.writeFileSync(
  'src/environments/git-version.ts',
  content,
  {encoding: 'utf8'}
);
/**
 * Generated in Json File
 */
// const content = '// this file is automatically generated by git.version-v2.ts script\n' +
//   `${versionInfoJson}`
// fs.writeFileSync(
//   'src/environments/git-version.json',
//   content,
//   {encoding: 'utf8'}
// );
